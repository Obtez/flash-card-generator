{"version":3,"sources":["views/Builder/_styles/Preview.module.scss","components/Layout/Layout.module.scss","components/Button/Button.module.scss","views/Builder/_styles/CardBuilder.module.scss","components/forms/Form.module.scss","components/Layout/Footer.tsx","components/Layout/Navbar.tsx","components/Layout/Layout.tsx","components/Button/Button.tsx","components/forms/FormLabel/FormLabel.tsx","views/Builder/BuilderForm.tsx","views/Builder/Card.tsx","views/Builder/CardList.tsx","views/Builder/EditModal.tsx","views/Builder/CardSide.tsx","views/Builder/Preview.tsx","views/Builder/BuilderPage.tsx","views/PageNotFound/PageNotFound.tsx","router/index.tsx","App.tsx","index.tsx"],"names":["module","exports","Footer","className","styles","footer","Navbar","navbar","to","logo","menu","Layout","children","Button","type","isPrimary","onClick","handleClick","btn","btnPrimary","btnSecondary","FormLabel","inputID","formLabel","htmlFor","CardForm","addCardToStack","useState","id","front","back","footerFront","footerBack","newCard","setNewCard","charsLeft","setCharsLeft","useEffect","maxChars","length","inputRef","useRef","updateInputValue","e","target","name","value","onSubmit","preventDefault","card","uuidv4","current","focus","formContainer","formGroup","ref","onChange","maxLength","required","submitContainer","submitBtn","Card","deleteCard","populateEditModal","cardItem","cardFront","cardBody","cardFooter","cardBack","btnContainer","editIcon","deleteIcon","CardList","cardStack","cardList","map","EditModal","cardToEdit","updateCardStack","editValues","setEditValues","editForm","CardSide","cardSide","isFront","Preview","sortedPages","togglePreview","pageContainer","cards","slice","pagesArray","i","pageSet","splice","sortCardsIntoPageArrays","cardPair","preview","pageInnerContainerFront","pageInnerContainerBack","BuilderPage","stored","localStorage","getItem","JSON","parse","setCardStack","showPreview","setShowPreview","showEdit","setShowEdit","setCardToEdit","printRef","a","updatedStack","setItem","stringify","toggleEdit","isOpen","cardBuilder","controls","BuilderForm","previewBtn","trigger","content","documentTitle","pageStyle","deleteBtn","cardsContainer","filteredStack","filter","c","tempCardStack","index","findIndex","hidden","editModal","editContainer","PageNotFound","Router","exact","path","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7aac1845.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"previewLayout\":\"Preview_previewLayout__1gWJa\",\"pageInnerContainerFront\":\"Preview_pageInnerContainerFront__2-VFj\",\"card\":\"Preview_card__kkkor\",\"cardBody\":\"Preview_cardBody__TcLJ3\",\"withBorder\":\"Preview_withBorder__2bkjZ\",\"cardFooter\":\"Preview_cardFooter__1KTl1\",\"pageInnerContainerBack\":\"Preview_pageInnerContainerBack__2nb8S\",\"modalCloseBtn\":\"Preview_modalCloseBtn__3MqEL\",\"previewBody\":\"Preview_previewBody__1VJa-\",\"pageContainer\":\"Preview_pageContainer__16UJ5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Layout_navbar__2Jj_v\",\"logo\":\"Layout_logo__2c34V\",\"menu\":\"Layout_menu__7RCvq\",\"footer\":\"Layout_footer__7ZyTp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__1Lkv5\",\"btnPrimary\":\"Button_btnPrimary__g_WP5\",\"btnSecondary\":\"Button_btnSecondary__1e7dV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardBuilder\":\"CardBuilder_cardBuilder__1-TML\",\"cardsContainer\":\"CardBuilder_cardsContainer__2s9qv\",\"formContainer\":\"CardBuilder_formContainer__2U-SC\",\"formGroup\":\"CardBuilder_formGroup__20Zns\",\"charsLeft\":\"CardBuilder_charsLeft__3q9wf\",\"submitContainer\":\"CardBuilder_submitContainer__3R_1h\",\"submitBtn\":\"CardBuilder_submitBtn__2wJQP\",\"previewBtn\":\"CardBuilder_previewBtn__1ROgs\",\"cardItem\":\"CardBuilder_cardItem__3Yw7o\",\"btnContainer\":\"CardBuilder_btnContainer__eyOUg\",\"editIcon\":\"CardBuilder_editIcon__ej095\",\"deleteIcon\":\"CardBuilder_deleteIcon__2tKgj\",\"cardFront\":\"CardBuilder_cardFront__2ZsvS\",\"cardBack\":\"CardBuilder_cardBack__30C_h\",\"cardBody\":\"CardBuilder_cardBody__eKxsl\",\"previewModal\":\"CardBuilder_previewModal__2qUqN\",\"previewContainer\":\"CardBuilder_previewContainer__1t0z1\",\"editModal\":\"CardBuilder_editModal__20SRu\",\"editContainer\":\"CardBuilder_editContainer__kOgiO\",\"hidden\":\"CardBuilder_hidden__2taET\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formGroup\":\"Form_formGroup__1ZK03\",\"formLabel\":\"Form_formLabel__3fysd\"};","import styles from \"./Layout.module.scss\"\n\nconst Footer = () => {\n  return (\n    <footer  className={styles.footer}>\n      <small>&copy; Copyright 2021, David Beer</small>\n    </footer>\n  )\n}\n\nexport default Footer","import { Link } from \"react-router-dom\"\nimport styles from \"./Layout.module.scss\"\n\nconst Navbar = () => {\n  return (\n    <nav className={styles.navbar}>\n      <Link to=\"/\" className={styles.logo}>\n        hedgeyCards\n      </Link>\n      <ul className={styles.menu}>\n        <li>\n          <Link to=\"/\">Editor</Link>\n        </li>\n      </ul>\n    </nav>\n  )\n}\n\nexport default Navbar","import { ReactChild } from \"react\"\nimport Footer from \"./Footer\"\nimport Navbar from \"./Navbar\"\n\ninterface PropTypes {\n  children: ReactChild\n}\n\nconst Layout = ({children}: PropTypes) => {\n  return (\n    <>\n      <Navbar />\n      {children}\n      <Footer />\n    </>\n  )\n}\n\nexport default Layout","import styles from \"./Button.module.scss\"\n\ninterface ButtonTypes {\n  children: string\n  type: \"button\" | \"submit\" | \"reset\"\n  isPrimary: boolean\n  onClick?: () => void\n}\n\nconst Button = ({ children, type, isPrimary, onClick }: ButtonTypes) => {\n  function handleClick() {\n    if (onClick) {\n      onClick()\n    }\n  }\n\n  if (isPrimary) {\n    return <button className={`${styles.btn} ${styles.btnPrimary}`} type={type} onClick={() => handleClick()}>{children}</button>\n  } else {\n    return <button className={`${styles.btn} ${styles.btnSecondary}`} type={type} onClick={() => handleClick()}>{children}</button>\n  }\n}\n\nexport default Button;","import styles from \"../Form.module.scss\"\n\ninterface FormLabelTypes {\n  children: string\n  inputID: string\n}\n\nconst FormLabel = ({ children, inputID }: FormLabelTypes) => {\n  return <label className={styles.formLabel} htmlFor={inputID}>{children}</label>\n}\n\nexport default FormLabel","import FormGroup from \"components/forms/FormGroup/FormGroup\";\nimport FormLabel from \"components/forms/FormLabel/FormLabel\";\nimport { FormEvent, useState, useEffect, useRef } from \"react\";\nimport { ChangeEvent } from \"react\"\nimport { v4 as uuidv4 } from 'uuid';\nimport { ICard } from \"types\";\nimport styles from \"./_styles/CardBuilder.module.scss\";\n\ninterface PropsType {\n  addCardToStack: (card: ICard) => void\n}\n\ninterface ICharsLeft {\n  front: number,\n  back: number,\n  footerFront: number,\n  footerBack: number\n}\n\nconst CardForm = ({addCardToStack}: PropsType) => {\n  const [newCard, setNewCard] = useState<ICard>({\n    id: \"\",\n    front: \"\",\n    back: \"\",\n    footerFront: \"\",\n    footerBack: \"\"\n  })\n\n  const [charsLeft, setCharsLeft] = useState<ICharsLeft>({\n    front: 140,\n    back: 140,\n    footerFront: 140,\n    footerBack: 140\n  })\n\n  useEffect(() => {\n    const maxChars = 140\n    setCharsLeft({\n      front: maxChars - newCard.front.length,\n      back: maxChars - newCard.back.length,\n      footerFront: maxChars - newCard.footerFront.length,\n      footerBack: maxChars - newCard.footerBack.length,\n    })\n\n  }, [newCard])\n\n  const inputRef = useRef<any>(null)\n\n  function updateInputValue(e: ChangeEvent<HTMLInputElement>) {\n    setNewCard({\n      ...newCard,\n      [e.target.name]: e.target.value\n    })\n  }\n\n  function handleSubmit(e: FormEvent) {\n    e.preventDefault()\n\n    const card: ICard = {\n      ...newCard,\n      id: uuidv4()\n    }\n\n    addCardToStack(card)\n\n    setNewCard({\n      id: \"\",\n      front: \"\",\n      back: \"\",\n      footerFront: \"\",\n      footerBack: \"\"\n    })\n    if (inputRef.current) {\n    inputRef.current.focus()\n    }\n  }\n\n  return (\n    <form onSubmit={handleSubmit} className={styles.formContainer}>\n      <div className={styles.formGroup}>\n        <FormLabel inputID=\"front\">Front</FormLabel>\n      <input \n      type=\"text\" \n      name=\"front\" id=\"front\" \n      value={newCard.front} \n      ref={inputRef} \n      onChange={(e) => updateInputValue(e)}\n      maxLength={140}  \n      required\n        />\n        <small className={styles.charsLeft}>{charsLeft.front} left</small>\n      </div>\n\n\n       <div className={styles.formGroup}>\n        <FormLabel inputID=\"back\">Back</FormLabel>\n        <input \n        type=\"text\" \n        name=\"back\" \n        id=\"back\" \n        value={newCard.back} \n        onChange={(e) => updateInputValue(e)}\n        maxLength={140}\n        required \n        />\n        <small className={styles.charsLeft}>{charsLeft.back} left</small>\n      </div>\n\n      <div className={styles.formGroup}>\n        <FormLabel inputID=\"footerFront\">Footer Front</FormLabel>\n        <input \n        type=\"text\" \n        name=\"footerFront\" \n        id=\"footerFront\" \n        value={newCard.footerFront} \n        onChange={(e) => updateInputValue(e)}\n        maxLength={140}  \n        />\n        <small className={styles.charsLeft}>{charsLeft.footerFront} left</small>\n      </div>\n\n      <div className={styles.formGroup}>\n        <FormLabel inputID=\"footerFront\">Footer Back</FormLabel>\n        <input \n        type=\"text\" \n        name=\"footerBack\" \n        id=\"footerBack\" \n        value={newCard.footerBack} \n        onChange={(e) => updateInputValue(e)}\n        maxLength={140}  \n        />\n        <small className={styles.charsLeft}>{charsLeft.footerBack} left</small>\n      </div>\n\n      <span className={styles.submitContainer}>\n        <input \n        type=\"submit\" \n        value=\" + \" \n        className={styles.submitBtn} \n        />\n      </span>\n    </form>\n  )\n}\n\nexport default CardForm;","import { AiOutlineDelete } from \"react-icons/ai\"\nimport { BiEdit } from \"react-icons/bi\"\nimport { ICard } from \"types\";\nimport styles from \"./_styles/CardBuilder.module.scss\";\n\ninterface PropsType {\n  card: ICard\n  deleteCard: (id: string) => void\n  populateEditModal: (id: string, isOpen: boolean) => void\n}\n\nconst Card = ({ card, deleteCard, populateEditModal }: PropsType) => {\n  return (\n    <li className={styles.cardItem}>\n      <div className={styles.cardFront} onClick={() => populateEditModal(card.id, false)}>\n        <p className={styles.cardBody}>{card.front}</p>\n        {\n          card.footerFront ? (\n          <small className={styles.cardFooter}>{card.footerFront}</small>\n          ) : null\n        }\n  \n      </div>\n      \n      <div className={styles.cardBack} onClick={() => populateEditModal(card.id, false)} >\n        <p className={styles.cardBody}>{card.back}</p>\n         {\n          card.footerBack ? (\n          <small className={styles.cardFooter}>{card.footerBack}</small>\n          ) : null\n        }\n      </div>\n\n      <div className={styles.btnContainer}>\n        <BiEdit className={styles.editIcon} onClick={() => populateEditModal(card.id, false)} />\n        <AiOutlineDelete className={styles.deleteIcon} onClick={() => deleteCard(card.id)}/>\n      </div>\n\n  </li>\n  )\n}\n\nexport default Card;","import { ICard } from \"types\";\nimport Card from \"./Card\";\nimport styles from \"./_styles/CardBuilder.module.scss\";\n\ninterface PropsType {\n  cardStack: ICard[]\n  deleteCard: (id: string) => void\n  populateEditModal: (id: string, isOpen: boolean) => void\n}\n\nconst CardList = ({ cardStack, deleteCard, populateEditModal }: PropsType) => {  \n  return (\n    <section className={styles.cardList}>\n      <ul>\n        {cardStack.map(card => {\n        return (\n          <Card card={card} key={card.id} deleteCard={deleteCard} populateEditModal={populateEditModal} />\n          )\n        })}\n      </ul>\n      \n    </section>  \n  )\n}\n\nexport default CardList;","import { FormEvent, useState } from \"react\"\nimport {ChangeEvent} from \"react\"\nimport FormGroup from \"components/forms/FormGroup/FormGroup\"\nimport FormLabel from \"components/forms/FormLabel/FormLabel\"\nimport SubmitButton from \"components/forms/SubmitButton/SubmitButton\"\nimport {ICard} from \"../../types\"\nimport styles from \"./_styles/CardBuilder.module.scss\"\n\ninterface PropTypes {\n  cardToEdit: ICard\n  updateCardStack: (card: ICard, isOpen: boolean) => void \n}\n\nconst EditModal = ({cardToEdit, updateCardStack}: PropTypes) => {\n  const [editValues, setEditValues] = useState({\n    id: cardToEdit.id,\n    front: cardToEdit.front,\n    back: cardToEdit.back,\n    footerFront: cardToEdit.footerFront,\n    footerBack: cardToEdit.footerBack\n  })\n\n  function updateInputValue(e: ChangeEvent<HTMLInputElement>) {\n    setEditValues({\n      ...editValues,\n      [e.target.name]: e.target.value\n    })\n  }\n\n  function handleSubmit(e: FormEvent) {\n    e.preventDefault()\n\n    const card = editValues\n    updateCardStack(card, true)\n\n    setEditValues({\n      id: \"\",\n      front: \"\",\n      back: \"\",\n      footerFront: \"\",\n      footerBack: \"\"\n    })\n  }\n\n  return (\n    <form onSubmit={handleSubmit} className={styles.editForm}>\n      <h3>EDIT</h3>\n    <div className={styles.formGroup}>\n      <FormLabel inputID=\"front\">Front</FormLabel>\n      <input\n        type=\"text\"\n        name=\"front\"\n        id=\"front\"\n        value={editValues.front}\n        onChange={(e) => updateInputValue(e)}\n      />\n    </div>\n\n     <div className={styles.formGroup}>\n      <FormLabel inputID=\"back\">Back</FormLabel>\n      <input\n        type=\"text\"\n        name=\"back\"\n        id=\"back\"\n        value={editValues.back}\n        onChange={(e) => updateInputValue(e)}\n      />\n      </div>\n      \n      <div className={styles.formGroup}>\n        <FormLabel inputID=\"footerFront\">Footer Front</FormLabel>\n        <input\n          type=\"text\"\n          name=\"footerFront\"\n          id=\"footerFront\"\n          value={editValues.footerFront}\n          onChange={(e) => updateInputValue(e)}\n        />\n      </div>\n\n     <div className={styles.formGroup}>\n      <FormLabel inputID=\"footerBack\">Footer Back</FormLabel>\n      <input\n        type=\"text\"\n        name=\"footerBack\"\n        id=\"footerBack\"\n        value={editValues.footerBack}\n        onChange={(e) => updateInputValue(e)}\n      />\n    </div>\n\n    <input type=\"submit\" value=\"Save\" />\n  </form>\n  )\n}\n\nexport default EditModal","import { ICard } from \"types\";\nimport styles from \"./_styles/Preview.module.scss\";\n\ninterface PropsTypes {\n  id: string\n  cardSide: ICard\n  isFront: boolean\n}\n\nconst CardSide = ({ id, cardSide, isFront }: PropsTypes) => {\n  return (\n    <>\n        <div className={styles.card} key={id}>\n          <div className={styles.cardBody}>\n            <p>{isFront ? cardSide.front : cardSide.back}</p>\n          </div>\n          <div className={styles.cardFooter}>\n            <p>{isFront ? cardSide.footerFront : cardSide.footerBack}</p>\n          </div>\n        </div>\n    </>\n  )\n}\n\nexport default CardSide;","import { v4 as uuidv4 } from 'uuid';\nimport { ICard } from \"types\";\nimport CardSide from './CardSide';\nimport styles from \"./_styles/Preview.module.scss\";\n\n\ninterface PropsType {\n  cardStack: ICard[]\n  togglePreview: () => void\n}\n\nconst Preview = ({ cardStack, togglePreview }: PropsType) => {\n\n  let sortedPages: ICard[][] = []\n\n   function sortCardsIntoPageArrays() {\n     let cards: ICard[] = cardStack.slice();\n     let pagesArray: ICard[][] = []\n\n     let i = cards.length\n    while (i > 0) {\n      if (cards.length >= 10) {\n\n        // Exact amount needed for 1 page group (front + back)\n        const pageSet = [cards.splice(0, 10)]\n        pagesArray = [...pagesArray, pageSet[0]]\n        i -= 10\n\n      } else {\n\n        // If there are less than 10 cards left\n        const pageSet = [cards.splice(0, cards.length)]\n        pagesArray = [...pagesArray, pageSet[0]]\n        i = 0\n\n      }\n    }\n     sortedPages = pagesArray;\n   }\n  \n  \n  // To enable easy 2-side print, the front and the back of each card need to be on different pages\n  // and aligned correctly. \n  function generatePages() {\n    // sortedPages [[page1 card fronts], [page2 card backs],...]\n    // one array per page\n    sortCardsIntoPageArrays()\n    \n    return sortedPages.map((cardPair) => {\n       \n      return (\n        <div key={uuidv4()} className={styles.preview}>\n          {/* page 1 with card fronts */}\n          <div className={styles.pageInnerContainerFront} key={uuidv4()}>\n            {cardPair.map(cardSide => <CardSide id={uuidv4()} cardSide={cardSide} isFront={true} />)}\n          </div>\n\n          {/* page 2 with card backs */}\n          <div className={styles.pageInnerContainerBack} key={ uuidv4()}>\n            {cardPair.map(cardSide => <CardSide id={uuidv4()} cardSide={cardSide} isFront={false} />)}\n          </div>\n        </div>\n      )\n    })\n  }\n  \n  return (\n        <div className={styles.pageContainer}>\n          {generatePages()}\n        </div>\n  )\n}\n\nexport default Preview;","import Button from \"components/Button/Button\";\nimport { useEffect, useRef, useState } from \"react\";\nimport ReactToPrint from \"react-to-print\";\nimport { ICard } from \"types\";\nimport BuilderForm from \"./BuilderForm\";\nimport CardList from \"./CardList\";\nimport EditModal from \"./EditModal\";\nimport Preview from \"./Preview\";\nimport styles from \"./_styles/CardBuilder.module.scss\";\n\nconst BuilderPage = () => {\n  const [cardStack, setCardStack] = useState<ICard[]>(() => {\n    const stored = localStorage.getItem(\"cards\");\n    if (stored !== null) {\n      const initialState = JSON.parse(stored);\n      return initialState || []\n    } else {\n      return []\n    }\n  })\n\n  const [showPreview, setShowPreview] = useState(false)\n  const [showEdit, setShowEdit] = useState(false)\n  const [cardToEdit, setCardToEdit] = useState({\n    id: \"\",\n    front: \"\",\n    back: \"\",\n    footerFront: \"\",\n    footerBack: \"\"\n  })\n\n  const printRef = useRef(null);\n\n  useEffect(() => {\n    const stored = localStorage.getItem(\"cards\")\n    if (stored !== null) {\n      const cards = JSON.parse(stored)\n      setCardStack(cards)\n    }\n  }, [showPreview, showEdit])\n\n  async function addCardToStack(card: any) {\n    if (cardStack.length === 0) {\n      setCardStack([card])\n    }\n\n    const updatedStack = [...cardStack, card]\n    localStorage.setItem(\"cards\", JSON.stringify(updatedStack))\n    setCardStack(updatedStack)\n  }\n\n  function deleteCard(id: string) {\n    const filteredStack = cardStack.filter(c => c.id !== id)\n    localStorage.setItem(\"cards\", JSON.stringify(filteredStack))\n    setCardStack([...filteredStack])\n  }\n\n  function deleteAllCards() {\n    localStorage.setItem(\"cards\", JSON.stringify([]))\n    setCardStack([])\n  }\n\n  function populateEditModal(id: string, isOpen: boolean) {\n    toggleEdit(isOpen)\n\n    const tempCardStack = cardStack\n    const index = tempCardStack.findIndex(c => c.id === id)\n    setCardToEdit(tempCardStack[index])\n  }\n\n   function toggleEdit(isOpen: boolean) {\n    if (isOpen) {\n      setShowEdit(false)\n    } else {\n      setShowEdit(true)\n    }\n   }\n  \n  function updateCardStack(card: ICard, isOpen: boolean) {\n    toggleEdit(isOpen)\n\n   \n    const tempCardStack = cardStack\n    const index = tempCardStack.findIndex(c => c.id === card.id)\n    tempCardStack[index] = card\n    setCardStack(tempCardStack)\n\n    localStorage.setItem(\"cards\", JSON.stringify(tempCardStack))\n\n    setCardToEdit({\n      id: \"\",\n      front: \"\",\n      back: \"\",\n      footerFront: \"\",\n      footerBack: \"\"\n    })\n  }\n\n  function togglePreview() {\n    setShowPreview(!showPreview)\n  }\n\n  return (\n      <main className={styles.cardBuilder}>\n\n        <div className={styles.controls}>\n          <BuilderForm addCardToStack={(card: ICard) => addCardToStack(card)}/>\n        <div className={styles.previewBtn}>\n          \n            <ReactToPrint\n                trigger={() => <Button type={\"button\"} isPrimary={true}>Print</Button>}\n                content={() => printRef.current}\n                documentTitle={\"Flash Cards\"}\n                pageStyle={\"margin: 1.2cm 1cm\"}\n                />\n          </div>\n\n          <div className={styles.deleteBtn}>\n            <Button type=\"button\" isPrimary={false} onClick={() => deleteAllCards()}>Delete All Cards</Button>\n          </div>\n        </div>\n\n        <div className={styles.cardsContainer}>\n          {cardStack.length > 0 ?\n              <CardList cardStack={cardStack} deleteCard={deleteCard} populateEditModal={populateEditModal}/> : null}\n        </div>\n\n        <div className={styles.hidden} ref={printRef}>\n                  <Preview cardStack={cardStack} togglePreview={togglePreview}/>\n        </div>\n\n\n\n        {\n          showEdit ? (\n              <div className={styles.editModal}>\n                <div className={styles.editContainer}>\n                  <EditModal cardToEdit={cardToEdit} updateCardStack={updateCardStack}/>\n                </div>\n              </div>\n          ) : null\n        }\n      </main>\n  );\n}\n\nexport default BuilderPage;","import { Link } from \"react-router-dom\";\n\nconst PageNotFound = () => {\n  return (\n    <main>\n      <h1>404 - Page Not Found</h1>\n      <Link to=\"/\">Back Home</Link>\n    </main>\n  )\n}\n\nexport default PageNotFound;","import { Switch, Route, BrowserRouter } from \"react-router-dom\";\nimport Layout from \"components/Layout/Layout\";\nimport BuilderPage from \"../views/Builder/BuilderPage\"\nimport HomePage from \"../views/Home/HomePage\";\nimport PageNotFound from \"../views/PageNotFound/PageNotFound\";\n\nconst Router = () => {\n  return (\n    <BrowserRouter>\n\n        <Layout>\n      <Switch>\n          {/* Editor */}\n          <Route exact path=\"/\">\n            <BuilderPage />\n          </Route>\n          {/* 404 Not Found */}\n          <Route path=\"*\">\n            <PageNotFound />\n          </Route>\n      </Switch>\n        </Layout>\n\n    </BrowserRouter>\n  )\n}\n\nexport default Router","import Router from \"router\";\n\nfunction App() {\n  return (\n    <Router />\n  )\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}