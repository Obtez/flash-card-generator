{"version":3,"sources":["components/Layout/Layout.module.scss","components/Button/Button.module.scss","components/forms/Form.module.scss","views/Builder/_styles/CardBuilder.module.scss","views/Home/LandingPage.module.scss","components/Layout/Footer.tsx","components/Layout/Navbar.tsx","components/Layout/Layout.tsx","components/forms/FormGroup/FormGroup.tsx","components/forms/FormLabel/FormLabel.tsx","views/Builder/BuilderForm.tsx","views/Builder/Card.tsx","views/Builder/CardList.tsx","components/Button/Button.tsx","views/Builder/CardSide.tsx","views/Builder/Preview.tsx","views/Builder/EditModal.tsx","views/Builder/BuilderPage.tsx","views/Home/HomePage.tsx","views/PageNotFound/PageNotFound.tsx","router/index.tsx","App.tsx","index.tsx","views/Builder/_styles/Preview.module.scss"],"names":["module","exports","Footer","className","styles","footer","Navbar","navbar","to","logo","menu","Layout","children","FormGroup","formGroup","FormLabel","inputID","formLabel","htmlFor","CardForm","addCardToStack","useState","id","front","back","footerFront","footerBack","newCard","setNewCard","inputRef","useRef","updateInputValue","e","target","name","value","onSubmit","preventDefault","card","uuidv4","current","focus","formContainer","type","ref","onChange","required","submitContainer","submitBtn","Card","deleteCard","populateEditModal","cardItem","cardFront","onClick","cardBody","cardFooter","cardBack","btnContainer","editIcon","deleteIcon","CardList","cardStack","cardList","map","Button","isPrimary","handleClick","btn","btnPrimary","btnSecondary","CardSide","cardSide","isFront","withBorder","Preview","togglePreview","setCardStack","printRef","useEffect","stored","localStorage","getItem","cards","JSON","parse","sortedPages","previewLayout","modalCloseBtn","previewBody","pageContainer","pagesArray","i","length","pageSet","splice","sortCardsIntoPageArrays","cardPair","preview","pageInnerContainerFront","pageInnerContainerBack","previewControls","trigger","content","documentTitle","pageStyle","EditModal","cardToEdit","updateCardStack","editValues","setEditValues","editForm","BuilderPage","showPreview","setShowPreview","showEdit","setShowEdit","setCardToEdit","a","updatedStack","setItem","stringify","toggleEdit","isOpen","cardBuilder","controls","BuilderForm","previewBtn","deleteBtn","cardsContainer","filteredStack","filter","c","tempCardStack","index","findIndex","previewModal","previewContainer","editModal","editContainer","HomePage","layout","PageNotFound","Router","exact","path","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c8e2b94c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Layout_navbar__2Jj_v\",\"logo\":\"Layout_logo__2c34V\",\"menu\":\"Layout_menu__7RCvq\",\"footer\":\"Layout_footer__7ZyTp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__1Lkv5\",\"btnPrimary\":\"Button_btnPrimary__g_WP5\",\"btnSecondary\":\"Button_btnSecondary__1e7dV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formGroup\":\"Form_formGroup__1ZK03\",\"formLabel\":\"Form_formLabel__3fysd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardBuilder\":\"CardBuilder_cardBuilder__1-TML\",\"cardsContainer\":\"CardBuilder_cardsContainer__2s9qv\",\"formContainer\":\"CardBuilder_formContainer__2U-SC\",\"submitContainer\":\"CardBuilder_submitContainer__3R_1h\",\"submitBtn\":\"CardBuilder_submitBtn__2wJQP\",\"previewBtn\":\"CardBuilder_previewBtn__1ROgs\",\"cardItem\":\"CardBuilder_cardItem__3Yw7o\",\"btnContainer\":\"CardBuilder_btnContainer__eyOUg\",\"editIcon\":\"CardBuilder_editIcon__ej095\",\"deleteIcon\":\"CardBuilder_deleteIcon__2tKgj\",\"cardFront\":\"CardBuilder_cardFront__2ZsvS\",\"cardBack\":\"CardBuilder_cardBack__30C_h\",\"cardBody\":\"CardBuilder_cardBody__eKxsl\",\"previewModal\":\"CardBuilder_previewModal__2qUqN\",\"previewContainer\":\"CardBuilder_previewContainer__1t0z1\",\"editModal\":\"CardBuilder_editModal__20SRu\",\"editContainer\":\"CardBuilder_editContainer__kOgiO\",\"formGroup\":\"CardBuilder_formGroup__20Zns\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"LandingPage_layout__sZx6f\"};","import styles from \"./Layout.module.scss\"\n\nconst Footer = () => {\n  return (\n    <footer  className={styles.footer}>\n      <small>&copy; Copyright 2021, David Beer</small>\n    </footer>\n  )\n}\n\nexport default Footer","import { Link } from \"react-router-dom\"\nimport styles from \"./Layout.module.scss\"\n\nconst Navbar = () => {\n  return (\n    <nav className={styles.navbar}>\n      <Link to=\"/\" className={styles.logo}>\n        hedgeyCards\n      </Link>\n      <ul className={styles.menu}>\n        <li>\n          <Link to=\"/\">Home</Link>\n        </li>\n\n        <li>\n          <Link to=\"/create\">Create</Link>\n        </li>\n\n        <li>\n          <Link to=\"/#contact\">Contact</Link>\n        </li>\n      </ul>\n    </nav>\n  )\n}\n\nexport default Navbar","import { ReactChild } from \"react\"\nimport Footer from \"./Footer\"\nimport Navbar from \"./Navbar\"\n\ninterface PropTypes {\n  children: ReactChild\n}\n\nconst Layout = ({children}: PropTypes) => {\n  return (\n    <>\n      <Navbar />\n      {children}\n      <Footer />\n    </>\n  )\n}\n\nexport default Layout","import { ReactChild } from \"react\";\nimport styles from \"../Form.module.scss\"\n\ninterface FormGroupTypes {\n  children: ReactChild[]\n}\n\nconst FormGroup = ({ children }: FormGroupTypes) => {\n  return (\n    <div className={styles.formGroup}>\n      {children}\n    </div>\n  )\n}\n\nexport default FormGroup","import styles from \"../Form.module.scss\"\n\ninterface FormLabelTypes {\n  children: string\n  inputID: string\n}\n\nconst FormLabel = ({ children, inputID }: FormLabelTypes) => {\n  return <label className={styles.formLabel} htmlFor={inputID}>{children}</label>\n}\n\nexport default FormLabel","import FormGroup from \"components/forms/FormGroup/FormGroup\";\nimport FormLabel from \"components/forms/FormLabel/FormLabel\";\nimport { FormEvent, useState, useRef } from \"react\";\nimport { ChangeEvent } from \"react\"\nimport { v4 as uuidv4 } from 'uuid';\nimport { ICard } from \"types\";\nimport styles from \"./_styles/CardBuilder.module.scss\";\n\ninterface PropsType {\n  addCardToStack: (card: ICard) => void\n}\n\nconst CardForm = ({addCardToStack}: PropsType) => {\n  const [newCard, setNewCard] = useState<ICard>({\n    id: \"\",\n    front: \"\",\n    back: \"\",\n    footerFront: \"\",\n    footerBack: \"\"\n  })\n\n  const inputRef = useRef<any>(null)\n\n  function updateInputValue(e: ChangeEvent<HTMLInputElement>) {\n    setNewCard({\n      ...newCard,\n      [e.target.name]: e.target.value\n    })\n  }\n\n  function handleSubmit(e: FormEvent) {\n    e.preventDefault()\n\n    const card: ICard = {\n      ...newCard,\n      id: uuidv4()\n    }\n\n    addCardToStack(card)\n\n    setNewCard({\n      id: \"\",\n      front: \"\",\n      back: \"\",\n      footerFront: \"\",\n      footerBack: \"\"\n    })\n    if (inputRef.current) {\n    inputRef.current.focus()\n    }\n  }\n\n  return (\n    <form onSubmit={handleSubmit} className={styles.formContainer}>\n      <FormGroup>\n        <FormLabel inputID=\"front\">Front</FormLabel>\n      <input \n      type=\"text\" \n      name=\"front\" id=\"front\" \n      value={newCard.front} \n      ref={inputRef} \n      onChange={(e) => updateInputValue(e)} \n      required\n      />\n      </FormGroup>\n\n\n       <FormGroup>\n        <FormLabel inputID=\"back\">Back</FormLabel>\n        <input \n        type=\"text\" \n        name=\"back\" \n        id=\"back\" \n        value={newCard.back} \n        onChange={(e) => updateInputValue(e)} \n        required \n        />\n      </FormGroup>\n\n      <FormGroup>\n        <FormLabel inputID=\"footerFront\">Footer Front</FormLabel>\n        <input \n        type=\"text\" \n        name=\"footerFront\" \n        id=\"footerFront\" \n        value={newCard.footerFront} \n        onChange={(e) => updateInputValue(e)} \n        />\n      </FormGroup>\n\n      <FormGroup>\n        <FormLabel inputID=\"footerFront\">Footer Back</FormLabel>\n        <input \n        type=\"text\" \n        name=\"footerBack\" \n        id=\"footerBack\" \n        value={newCard.footerBack} \n        onChange={(e) => updateInputValue(e)} \n        />\n      </FormGroup>\n\n      <span className={styles.submitContainer}>\n        <input \n        type=\"submit\" \n        value=\" + \" \n        className={styles.submitBtn} \n        />\n      </span>\n    </form>\n  )\n}\n\nexport default CardForm;","import { AiOutlineDelete } from \"react-icons/ai\"\nimport { BiEdit } from \"react-icons/bi\"\nimport { ICard } from \"types\";\nimport styles from \"./_styles/CardBuilder.module.scss\";\n\ninterface PropsType {\n  card: ICard\n  deleteCard: (id: string) => void\n  populateEditModal: (id: string, isOpen: boolean) => void\n}\n\nconst Card = ({ card, deleteCard, populateEditModal }: PropsType) => {\n  return (\n    <li className={styles.cardItem}>\n      <div className={styles.cardFront} onClick={() => populateEditModal(card.id, false)}>\n        <p className={styles.cardBody}>{card.front}</p>\n        {\n          card.footerFront ? (\n          <small className={styles.cardFooter}>{card.footerFront}</small>\n          ) : null\n        }\n  \n      </div>\n      \n      <div className={styles.cardBack} onClick={() => populateEditModal(card.id, false)} >\n        <p className={styles.cardBody}>{card.back}</p>\n         {\n          card.footerBack ? (\n          <small className={styles.cardFooter}>{card.footerBack}</small>\n          ) : null\n        }\n      </div>\n\n      <div className={styles.btnContainer}>\n        <BiEdit className={styles.editIcon} onClick={() => populateEditModal(card.id, false)} />\n        <AiOutlineDelete className={styles.deleteIcon} onClick={() => deleteCard(card.id)}/>\n      </div>\n\n  </li>\n  )\n}\n\nexport default Card;","import { ICard } from \"types\";\nimport Card from \"./Card\";\nimport styles from \"./_styles/CardBuilder.module.scss\";\n\ninterface PropsType {\n  cardStack: ICard[]\n  deleteCard: (id: string) => void\n  populateEditModal: (id: string, isOpen: boolean) => void\n}\n\nconst CardList = ({ cardStack, deleteCard, populateEditModal }: PropsType) => {  \n  return (\n    <section className={styles.cardList}>\n      <ul>\n        {cardStack.map(card => {\n        return (\n          <Card card={card} key={card.id} deleteCard={deleteCard} populateEditModal={populateEditModal} />\n          )\n        })}\n      </ul>\n      \n    </section>  \n  )\n}\n\nexport default CardList;","import styles from \"./Button.module.scss\"\n\ninterface ButtonTypes {\n  children: string\n  type: \"button\" | \"submit\" | \"reset\"\n  isPrimary: boolean\n  onClick?: () => void\n}\n\nconst Button = ({ children, type, isPrimary, onClick }: ButtonTypes) => {\n  function handleClick() {\n    if (onClick) {\n      onClick()\n    }\n  }\n\n  if (isPrimary) {\n    return <button className={`${styles.btn} ${styles.btnPrimary}`} type={type} onClick={() => handleClick()}>{children}</button>\n  } else {\n    return <button className={`${styles.btn} ${styles.btnSecondary}`} type={type} onClick={() => handleClick()}>{children}</button>\n  }\n}\n\nexport default Button;","import { ICard } from \"types\";\nimport styles from \"./_styles/Preview.module.scss\";\n\ninterface PropsTypes {\n  id: string\n  cardSide: ICard\n  isFront: boolean\n  withBorder: boolean\n}\n\nconst CardSide = ({ id, cardSide, isFront, withBorder }: PropsTypes) => {\n  return (\n    <>\n      {\n        withBorder? (\n          <div className={styles.card} key={id}>\n            <div className={`${styles.cardBody}`}>\n              <p>{isFront ? cardSide.front : cardSide.back}</p>\n            </div>\n          </div>\n      ) : (\n        <div className={styles.card} key={id}>\n          <div className={styles.cardBody}>\n            <p>{isFront ? cardSide.front : cardSide.back}</p>\n          </div>\n        </div>\n      )\n        }\n    </>\n  )\n}\n\nexport default CardSide;","import { useState, useEffect, useRef, ChangeEvent } from \"react\";\nimport FormLabel from \"components/forms/FormLabel/FormLabel\";\nimport Button from \"components/Button/Button\";\nimport ReactToPrint from \"react-to-print\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { AiFillCloseCircle } from \"react-icons/ai\";\nimport { ICard } from \"types\";\nimport CardSide from './CardSide';\nimport styles from \"./_styles/Preview.module.scss\";\n\ninterface PropsType {\n  cardStack: ICard[]\n  togglePreview: () => void\n}\n\nconst Preview = ({ togglePreview }: PropsType) => {\n  const [cardStack, setCardStack] = useState<ICard[]>([])\n  const [withBorder, setWithBorder] = useState(false)\n  const printRef = useRef(null);\n\n  useEffect(() => {\n    const stored = localStorage.getItem(\"cards\")\n    if (stored !== null) {\n      const cards = JSON.parse(stored)\n      setCardStack(cards)\n    } \n  }, [withBorder])\n\n  function handleChange(e: ChangeEvent<HTMLInputElement>) {\n    if (e.target.name === \"showBorder\") {\n      setWithBorder(!withBorder)\n    }\n  }\n  \n  let sortedPages: ICard[][] = []\n\n   function sortCardsIntoPageArrays() {\n     let cards: ICard[] = cardStack;\n     let pagesArray: ICard[][] = []\n\n     let i = cards.length\n    while (i > 0) {\n      if (cards.length >= 10) {\n\n        // Exact amount needed for 1 page group (front + back)\n        const pageSet = [cards.splice(0, 10)]\n        pagesArray = [...pagesArray, pageSet[0]]\n        i -= 10\n\n      } else {\n\n        // If there are less than 10 cards left\n        const pageSet = [cards.splice(0, cards.length)]\n        pagesArray = [...pagesArray, pageSet[0]]\n        i = 0\n\n      }\n    }\n     sortedPages = pagesArray;\n   }\n  \n  \n  // To enable easy 2-side print, the front and the back of each card need to be on different pages\n  // and aligend correctly. \n  function generatePages() {\n    // sortedPages [[page1 card fronts], [page2 card backs],...]\n    // one array per page\n    sortCardsIntoPageArrays()\n    \n    return sortedPages.map((cardPair) => {\n       \n      return (\n        <div key={uuidv4()} className={styles.preview}>\n          {/* page 1 with card fronts */}\n          <div className={styles.pageInnerContainerFront} key={uuidv4()}>\n            {cardPair.map(cardSide => <CardSide id={uuidv4()} cardSide={cardSide} isFront={true} withBorder={withBorder} />)}\n          </div>\n\n          {/* page 2 with card backs */}\n          <div className={styles.pageInnerContainerBack} key={ uuidv4()}>\n            {cardPair.map(cardSide => <CardSide id={uuidv4()} cardSide={cardSide} isFront={false} withBorder={withBorder} />)}\n          </div>\n        </div>\n      )\n    })\n  }\n  \n  return (\n    <div className={styles.previewLayout} ref={printRef}>\n      <header>\n        <AiFillCloseCircle className={styles.modalCloseBtn} onClick={() => togglePreview()} />\n        <h1>Preview</h1>\n        <p>Scroll to see next pages</p>\n      </header>\n      <div className={styles.previewBody}>\n        <div className={styles.pageContainer}>\n          {generatePages()}\n        </div>\n\n          <div className={styles.previewControls}>\n                    <ReactToPrint\n            trigger={() => <Button type=\"button\" isPrimary={true}>Print</Button>}\n            content={() => printRef.current}\n            documentTitle=\"Flash Cards\"\n            pageStyle=\"margin: 1.2cm 1cm\"\n                    />\n          </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Preview;","import { FormEvent, useState } from \"react\"\nimport {ChangeEvent} from \"react\"\nimport FormGroup from \"components/forms/FormGroup/FormGroup\"\nimport FormLabel from \"components/forms/FormLabel/FormLabel\"\nimport SubmitButton from \"components/forms/SubmitButton/SubmitButton\"\nimport {ICard} from \"../../types\"\nimport styles from \"./_styles/CardBuilder.module.scss\"\n\ninterface PropTypes {\n  cardToEdit: ICard\n  updateCardStack: (card: ICard, isOpen: boolean) => void \n}\n\nconst EditModal = ({cardToEdit, updateCardStack}: PropTypes) => {\n  const [editValues, setEditValues] = useState({\n    id: cardToEdit.id,\n    front: cardToEdit.front,\n    back: cardToEdit.back,\n    footerFront: cardToEdit.footerFront,\n    footerBack: cardToEdit.footerBack\n  })\n\n  function updateInputValue(e: ChangeEvent<HTMLInputElement>) {\n    setEditValues({\n      ...editValues,\n      [e.target.name]: e.target.value\n    })\n  }\n\n  function handleSubmit(e: FormEvent) {\n    e.preventDefault()\n\n    const card = editValues\n    updateCardStack(card, true)\n\n    setEditValues({\n      id: \"\",\n      front: \"\",\n      back: \"\",\n      footerFront: \"\",\n      footerBack: \"\"\n    })\n  }\n\n  return (\n    <form onSubmit={handleSubmit} className={styles.editForm}>\n      <h3>EDIT</h3>\n    <div className={styles.formGroup}>\n      <FormLabel inputID=\"front\">Front</FormLabel>\n      <input\n        type=\"text\"\n        name=\"front\"\n        id=\"front\"\n        value={editValues.front}\n        onChange={(e) => updateInputValue(e)}\n      />\n    </div>\n\n     <div className={styles.formGroup}>\n      <FormLabel inputID=\"back\">Back</FormLabel>\n      <input\n        type=\"text\"\n        name=\"back\"\n        id=\"back\"\n        value={editValues.back}\n        onChange={(e) => updateInputValue(e)}\n      />\n      </div>\n      \n      <div className={styles.formGroup}>\n        <FormLabel inputID=\"footerFront\">Footer Front</FormLabel>\n        <input\n          type=\"text\"\n          name=\"footerFront\"\n          id=\"footerFront\"\n          value={editValues.footerFront}\n          onChange={(e) => updateInputValue(e)}\n        />\n      </div>\n\n     <div className={styles.formGroup}>\n      <FormLabel inputID=\"footerBack\">Footer Back</FormLabel>\n      <input\n        type=\"text\"\n        name=\"footerBack\"\n        id=\"footerBack\"\n        value={editValues.footerBack}\n        onChange={(e) => updateInputValue(e)}\n      />\n    </div>\n\n    <input type=\"submit\" value=\"Save\" />\n  </form>\n  )\n}\n\nexport default EditModal","import { useState, useEffect } from \"react\";\nimport { ICard } from \"types\"\nimport BuilderForm from \"./BuilderForm\"\nimport CardList from \"./CardList\";\nimport styles from \"./_styles/CardBuilder.module.scss\";\nimport Preview from \"./Preview\";\nimport Button from \"components/Button/Button\";\nimport EditModal from \"./EditModal\";\n\nconst BuilderPage = () => {\n  const [cardStack, setCardStack] = useState<ICard[]>(() => {\n    const stored = localStorage.getItem(\"cards\");\n    if (stored !== null) {\n      const initialState = JSON.parse(stored);\n      return initialState || []\n    } else {\n      return []\n    }\n  })\n\n  const [showPreview, setShowPreview] = useState(false)\n  const [showEdit, setShowEdit] = useState(false)\n  const [cardToEdit, setCardToEdit] = useState({\n    id: \"\",\n    front: \"\",\n    back: \"\",\n    footerFront: \"\",\n    footerBack: \"\"\n  })\n\n  useEffect(() => {\n    const stored = localStorage.getItem(\"cards\")\n    if (stored !== null) {\n      const cards = JSON.parse(stored)\n      setCardStack(cards)\n    }\n  }, [showPreview, showEdit])\n\n  \n\n  async function addCardToStack(card: any) {\n    if (cardStack.length === 0) {\n      setCardStack([card])\n    }\n\n    const updatedStack = [...cardStack, card]\n    localStorage.setItem(\"cards\", JSON.stringify(updatedStack))\n    setCardStack(updatedStack)\n  }\n\n  function deleteCard(id: string) {\n    const filteredStack = cardStack.filter(c => c.id !== id)\n    localStorage.setItem(\"cards\", JSON.stringify(filteredStack))\n    setCardStack([...filteredStack])\n  }\n\n  function deleteAllCards() {\n    localStorage.setItem(\"cards\", JSON.stringify([]))\n    setCardStack([])\n  }\n\n  function populateEditModal(id: string, isOpen: boolean) {\n    toggleEdit(isOpen)\n\n    const tempCardStack = cardStack\n    const index = tempCardStack.findIndex(c => c.id === id)\n    setCardToEdit(tempCardStack[index])\n  }\n\n   function toggleEdit(isOpen: boolean) {\n    if (isOpen) {\n      setShowEdit(false)\n    } else {\n      setShowEdit(true)\n    }\n   }\n  \n  function updateCardStack(card: ICard, isOpen: boolean) {\n    toggleEdit(isOpen)\n\n   \n    const tempCardStack = cardStack\n    const index = tempCardStack.findIndex(c => c.id === card.id)\n    tempCardStack[index] = card\n    setCardStack(tempCardStack)\n\n    localStorage.setItem(\"cards\", JSON.stringify(tempCardStack))\n\n    setCardToEdit({\n      id: \"\",\n      front: \"\",\n      back: \"\",\n      footerFront: \"\",\n      footerBack: \"\"\n    })\n  }\n\n  function togglePreview() {\n    setShowPreview(!showPreview)\n  }\n\n  return (\n      <main className={styles.cardBuilder}>\n      \n        <div className={styles.controls}>\n        <BuilderForm addCardToStack={(card: ICard) => addCardToStack(card)} />\n          <div className={styles.previewBtn}><Button type=\"button\" isPrimary={true} onClick={() => togglePreview()}>PREVIEW AND PRINT</Button></div>\n          <div className={styles.deleteBtn}><Button type=\"button\" isPrimary={false} onClick={() => deleteAllCards()}>Delete All Cards</Button></div>\n      </div>\n      \n       <div className={styles.cardsContainer}>    \n               {cardStack.length > 0 ? <CardList cardStack={cardStack} deleteCard={deleteCard} populateEditModal={populateEditModal} /> : null}\n       </div>\n       {\n      showPreview ? (\n        <div className={styles.previewModal}>\n          <div className={styles.previewContainer}>\n            <Preview cardStack={cardStack} togglePreview={togglePreview} />\n          </div>\n        </div>\n      ) : \"\"\n        }\n        \n        {\n        showEdit ? (\n          <div className={styles.editModal}>\n            <div className={styles.editContainer}>\n              <EditModal cardToEdit={cardToEdit} updateCardStack={updateCardStack} />\n            </div>\n            </div>\n          ) : null\n        }\n     </main>\n  )\n}\n\nexport default BuilderPage;","import {Link} from \"react-router-dom\"\nimport Hero from \"./Hero\";\nimport About from \"./About\";\nimport Contact from \"./Contact\";\n\nimport styles from \"./LandingPage.module.scss\"\n\nconst HomePage = () => {\n  return (\n    <div className={styles.layout}>\n      <h1>Under Construction</h1>\n      <p>Check out the builder:</p>\n      <Link to=\"/create\">Click me!</Link>\n    </div>\n  )\n}\n\nexport default HomePage;","import { Link } from \"react-router-dom\";\n\nconst PageNotFound = () => {\n  return (\n    <main>\n      <h1>404 - Page Not Found</h1>\n      <Link to=\"/\">Back Home</Link>\n    </main>\n  )\n}\n\nexport default PageNotFound;","import { Switch, Route, BrowserRouter } from \"react-router-dom\";\nimport Layout from \"components/Layout/Layout\";\nimport BuilderPage from \"../views/Builder/BuilderPage\"\nimport HomePage from \"../views/Home/HomePage\";\nimport PageNotFound from \"../views/PageNotFound/PageNotFound\";\n\nconst Router = () => {\n  return (\n    <BrowserRouter>\n\n        <Layout>\n      <Switch>\n        \n          {/* Homepage */}\n          <Route exact path=\"/\">\n            <HomePage />\n          </Route>\n          {/* Card Builder */}\n          <Route exact path=\"/create\">\n            <BuilderPage />\n          </Route>\n          {/* 404 Not Found */}\n          <Route path=\"*\">\n            <PageNotFound />\n          </Route>\n      </Switch>\n        </Layout>\n\n    </BrowserRouter>\n  )\n}\n\nexport default Router","import Router from \"./router\";\n\nfunction App() {\n  return (\n    <Router />\n  )\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"previewLayout\":\"Preview_previewLayout__1gWJa\",\"pageInnerContainerFront\":\"Preview_pageInnerContainerFront__2-VFj\",\"card\":\"Preview_card__kkkor\",\"cardBody\":\"Preview_cardBody__TcLJ3\",\"withBorder\":\"Preview_withBorder__2bkjZ\",\"cardFooter\":\"Preview_cardFooter__1KTl1\",\"pageInnerContainerBack\":\"Preview_pageInnerContainerBack__2nb8S\",\"modalCloseBtn\":\"Preview_modalCloseBtn__3MqEL\",\"previewBody\":\"Preview_previewBody__1VJa-\",\"pageContainer\":\"Preview_pageContainer__16UJ5\"};"],"sourceRoot":""}