{"version":3,"sources":["views/Home/LandingPage.module.scss","components/Button/Button.module.scss","components/LinkButton/LinkButton.module.scss","views/Builder/_styles/CardBuilder.module.scss","components/forms/FormGroup/FormGroup.tsx","components/forms/FormLabel/FormLabel.tsx","components/forms/FormInput/FormInput.tsx","components/forms/SubmitButton/SubmitButton.tsx","views/Builder/BuilderForm/BuilderForm.tsx","views/Builder/Card/Card.tsx","views/Builder/CardList/CardList.tsx","components/Button/Button.tsx","views/Builder/Preview/CardSide.tsx","views/Builder/Preview/Preview.tsx","views/Builder/EditModal/EditModal.tsx","views/Builder/BuilderPage/BuilderPage.tsx","components/LinkButton/LinkButton.tsx","views/Home/Hero/Hero.tsx","views/Home/About/About.tsx","components/forms/FormTextArea/FormTextArea.tsx","views/Home/Contact/ContactForm/ContactForm.tsx","views/Home/Contact/Contact.tsx","views/Home/HomePage/HomePage.tsx","views/PageNotFound/PageNotFound.tsx","router/index.tsx","App.tsx","index.tsx","views/Builder/_styles/Preview.module.scss","components/forms/Form.module.scss"],"names":["module","exports","FormGroup","children","className","styles","formGroup","FormLabel","inputID","formLabel","htmlFor","FormInput","type","name","id","value","required","onChange","handleChange","e","target","formInput","SubmitButton","submitButton","CardForm","addCardToStack","useState","front","back","newCard","setNewCard","updateInputValue","property","onSubmit","preventDefault","card","uuidv4","formContainer","Card","deleteCard","populateEditModal","cardItem","deleteIcon","onClick","cardFront","editIcon","cardBack","CardList","cardStack","cardList","map","Button","handleClick","btn","primary","CardSide","cardSide","isFront","withBorder","cardBody","Preview","togglePreview","setCardStack","setWithBorder","printRef","useRef","useEffect","stored","localStorage","getItem","cards","JSON","parse","sortedPages","previewLayout","ref","modalCloseBtn","previewBody","pageContainer","pagesArray","i","length","pageSet","splice","sortCardsIntoPageArrays","cardPair","preview","pageInnerContainerFront","pageInnerContainerBack","checkboxFormGroup","trigger","content","current","documentTitle","pageStyle","EditModal","cardToEdit","updateCardStack","editValues","setEditValues","editModal","BuilderPage","showPreview","setShowPreview","showEdit","setShowEdit","setCardToEdit","a","updatedStack","setItem","stringify","toggleEdit","isOpen","cardBuilder","to","backLink","BuilderForm","previewBtn","filteredStack","filter","c","tempCardStack","index","findIndex","modal","previewContainer","LinkButton","href","linkBtn","Hero","hero","subheading","btnContainer","About","about","FormTextArea","formTextArea","rows","ContactForm","email","message","messageDetails","setMessageDetails","Contact","contact","HomePage","layout","PageNotFound","Router","exact","path","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dd8afd90.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"LandingPage_layout__sZx6f\",\"hero\":\"LandingPage_hero__2LIpi\",\"subheading\":\"LandingPage_subheading__KWzsU\",\"btnContainer\":\"LandingPage_btnContainer__3Y-lB\",\"about\":\"LandingPage_about__1Sdnc\",\"contact\":\"LandingPage_contact__1i5KT\",\"formContainer\":\"LandingPage_formContainer__1A3Bp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__1Lkv5\",\"primary\":\"Button_primary__I_9I9\",\"secondary\":\"Button_secondary__1gv5E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"linkBtn\":\"LinkButton_linkBtn__3t95S\",\"primary\":\"LinkButton_primary__1gK4X\",\"secondary\":\"LinkButton_secondary__3Wop5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalCloseBtn\":\"CardBuilder_modalCloseBtn__28u9W\",\"noPrintContainer\":\"CardBuilder_noPrintContainer__3uiNc\",\"cardBuilderContainer\":\"CardBuilder_cardBuilderContainer__321_J\",\"cardItem\":\"CardBuilder_cardItem__3Yw7o\",\"cardBuilder\":\"CardBuilder_cardBuilder__1-TML\",\"formContainer\":\"CardBuilder_formContainer__2U-SC\",\"deleteIcon\":\"CardBuilder_deleteIcon__2tKgj\",\"cardFront\":\"CardBuilder_cardFront__2ZsvS\",\"cardBack\":\"CardBuilder_cardBack__30C_h\",\"editIcon\":\"CardBuilder_editIcon__ej095\",\"modal\":\"CardBuilder_modal__3Gpew\",\"previewContainer\":\"CardBuilder_previewContainer__1t0z1\",\"editModal\":\"CardBuilder_editModal__20SRu\",\"previewBtn\":\"CardBuilder_previewBtn__1ROgs\"};","import { ReactChild } from \"react\";\nimport styles from \"../Form.module.scss\"\n\ninterface FormGroupTypes {\n  children: ReactChild[]\n}\n\nconst FormGroup = ({ children }: FormGroupTypes) => {\n  return (\n    <div className={styles.formGroup}>\n      {children}\n    </div>\n  )\n}\n\nexport default FormGroup","import styles from \"../Form.module.scss\"\n\ninterface FormLabelTypes {\n  children: string\n  inputID: string\n}\n\nconst FormLabel = ({ children, inputID }: FormLabelTypes) => {\n  return <label className={styles.formLabel} htmlFor={inputID}>{children}</label>\n}\n\nexport default FormLabel","import { ChangeEvent } from \"react\"\nimport styles from \"../Form.module.scss\"\n\ninterface FormInputTypes {\n  type: \"text\" | \"email\" | \"tel\" | \"checkbox\"\n  name: string\n  id: string\n  value: string\n  required: boolean\n  onChange: (property: string, value: string) => void\n}\n\n\n\nconst FormInput = ({ type, name, id, value, required = false, onChange }: FormInputTypes) => {\n\n  function handleChange(e: ChangeEvent<HTMLInputElement> ) {\n    onChange(e.target.name, e.target.value)\n  }\n\n  if (required) {\n    return <input className={styles.formInput} type={type} name={name} id={id} value={value} onChange={e => handleChange(e)} required />\n  } else {\n    return <input className={styles.formInput} type={type} name={name} id={id} value={value} onChange={e => handleChange(e)} />\n  }\n}\n\nexport default FormInput","import styles from \"../Form.module.scss\"\n\ninterface SubmitButtonTypes {\n  children: string\n}\n\nconst SubmitButton = ({children}: SubmitButtonTypes) => {\n  return <input className={styles.submitButton} type={\"submit\"} value={children} />\n}\n\nexport default SubmitButton","import FormGroup from \"components/forms/FormGroup/FormGroup\";\nimport FormLabel from \"components/forms/FormLabel/FormLabel\";\nimport FormInput from \"components/forms/FormInput/FormInput\";\nimport SubmitButton from \"components/forms/SubmitButton/SubmitButton\";\nimport { FormEvent, useState } from \"react\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { ICard } from \"types\";\nimport styles from \"../_styles/CardBuilder.module.scss\";\n\ninterface PropsType {\n  addCardToStack: (card: ICard) => void;\n}\n\nconst CardForm = ({addCardToStack}: PropsType) => {\n  const [newCard, setNewCard] = useState<ICard>({\n    id: \"\",\n    front: \"\",\n    back: \"\"\n  })\n\n\n  function updateInputValue(property: string, value: string) {\n    setNewCard({\n      ...newCard,\n      [property]: value\n    })\n  }\n\n  function handleSubmit(e: FormEvent) {\n    e.preventDefault()\n\n    const card: ICard = {\n      ...newCard,\n      id: uuidv4()\n    }\n\n    addCardToStack(card)\n\n    setNewCard({\n      id: \"\",\n      front: \"\",\n      back: \"\"\n    })\n  }\n\n  return (\n    <form onSubmit={handleSubmit} className={styles.formContainer}>\n      <FormGroup>\n        <FormLabel inputID=\"front\">Front</FormLabel>\n        <FormInput\n          type=\"text\"\n          name=\"front\"\n          id=\"front\"\n          value={newCard.front}\n          required={false}\n          onChange={updateInputValue}\n        />\n      </FormGroup>\n\n       <FormGroup>\n        <FormLabel inputID=\"back\">Back</FormLabel>\n        <FormInput\n          type=\"text\"\n          name=\"back\"\n          id=\"back\"\n          value={newCard.back}\n          required={false}\n          onChange={updateInputValue}\n        />\n      </FormGroup>\n\n      <SubmitButton>Add</SubmitButton>\n    </form>\n  )\n}\n\nexport default CardForm;","import Button from \"components/Button/Button\";\nimport { useState } from \"react\";\nimport { AiOutlineDelete } from \"react-icons/ai\"\nimport { BiEdit } from \"react-icons/bi\"\nimport { ICard } from \"types\";\nimport styles from \"../_styles/CardBuilder.module.scss\";\n\ninterface PropsType {\n  card: ICard\n  deleteCard: (id: string) => void\n  populateEditModal: (id: string, isOpen: boolean) => void\n}\n\nconst Card = ({ card, deleteCard, populateEditModal }: PropsType) => {\n  return (\n    <li className={styles.cardItem}>\n      <AiOutlineDelete className={styles.deleteIcon} onClick={() => deleteCard(card.id)}/>\n      <div className={styles.cardFront} onClick={() => populateEditModal(card.id, false)}>\n        <BiEdit className={styles.editIcon} />\n        <p>{card.front}</p>\n  \n      </div>\n      \n      <div className={styles.cardBack} onClick={() => populateEditModal(card.id, false)} >\n        <BiEdit className={styles.editIcon} />\n        <p>{card.back}</p>\n      </div>\n\n  </li>\n  )\n}\n\nexport default Card;","import { ICard } from \"types\";\nimport Card from \"../Card/Card\";\nimport styles from \"../_styles/CardBuilder.module.scss\";\n\ninterface PropsType {\n  cardStack: ICard[]\n  deleteCard: (id: string) => void\n  populateEditModal: (id: string, isOpen: boolean) => void\n}\n\nconst CardList = ({ cardStack, deleteCard, populateEditModal }: PropsType) => {  \n  return (\n    <section className={styles.cardList}>\n\n      <h2>Your Cards</h2>\n      <ul>\n        {cardStack.map(card => {\n        return (\n          <Card card={card} key={card.id} deleteCard={deleteCard} populateEditModal={populateEditModal} />\n          )\n        })}\n      </ul>\n      \n    </section>  \n  )\n}\n\nexport default CardList;","import styles from \"./Button.module.scss\"\n\ninterface ButtonTypes {\n  children: string\n  type: \"button\" | \"submit\" | \"reset\"\n  onClick?: () => void\n}\n\nconst Button = ({ children, type, onClick }: ButtonTypes) => {\n  function handleClick() {\n    if (onClick) {\n      onClick()\n    }\n  }\n\n  return <button className={`${styles.btn} ${styles.primary}`} type={type} onClick={() => handleClick()}>{children}</button>\n}\n\nexport default Button;","import { ICard } from \"types\";\nimport styles from \"../_styles/Preview.module.scss\";\n\ninterface PropsTypes {\n  id: string\n  cardSide: ICard\n  isFront: boolean\n  withBorder: boolean\n}\n\nconst CardSide = ({ id, cardSide, isFront, withBorder }: PropsTypes) => {\n  return (\n    <>\n      {\n        withBorder? (\n          <div className={styles.card} key={id}>\n            <div className={`${styles.cardBody} ${styles.withBorder}`}>\n              <p>{isFront ? cardSide.front : cardSide.back}</p>\n            </div>\n          </div>\n      ) : (\n        <div className={styles.card} key={id}>\n          <div className={styles.cardBody}>\n            <p>{isFront ? cardSide.front : cardSide.back}</p>\n          </div>\n        </div>\n      )\n        }\n    </>\n  )\n}\n\nexport default CardSide;","import { useState, useEffect, useRef, ChangeEvent } from \"react\";\nimport FormLabel from \"components/forms/FormLabel/FormLabel\";\nimport Button from \"components/Button/Button\";\nimport ReactToPrint from \"react-to-print\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { AiFillCloseCircle } from \"react-icons/ai\";\nimport { ICard } from \"types\";\nimport CardSide from './CardSide';\nimport styles from \"../_styles/Preview.module.scss\";\n\ninterface PropsType {\n  cardStack: ICard[]\n  togglePreview: () => void\n}\n\nconst Preview = ({ togglePreview }: PropsType) => {\n  const [cardStack, setCardStack] = useState<ICard[]>([])\n  const [withBorder, setWithBorder] = useState(false)\n  const printRef = useRef(null);\n\n  useEffect(() => {\n    const stored = localStorage.getItem(\"cards\")\n    if (stored !== null) {\n      const cards = JSON.parse(stored)\n      setCardStack(cards)\n    } \n  }, [withBorder])\n\n  function handleChange(e: ChangeEvent<HTMLInputElement>) {\n    if (e.target.name === \"showBorder\") {\n      setWithBorder(!withBorder)\n    }\n  }\n  \n  let sortedPages: ICard[][] = []\n\n   function sortCardsIntoPageArrays() {\n     let cards: ICard[] = cardStack;\n     let pagesArray: ICard[][] = []\n\n     let i = cards.length\n    while (i > 0) {\n      if (cards.length >= 10) {\n\n        // Exact amount needed for 1 page group (front + back)\n        const pageSet = [cards.splice(0, 10)]\n        pagesArray = [...pagesArray, pageSet[0]]\n        i -= 10\n\n      } else {\n\n        // If there are less than 10 cards left\n        const pageSet = [cards.splice(0, cards.length)]\n        pagesArray = [...pagesArray, pageSet[0]]\n        i = 0\n\n      }\n    }\n     sortedPages = pagesArray;\n   }\n  \n  \n  // To enable easy 2-side print, the front and the back of each card need to be on different pages\n  // and aligend correctly. \n  function generatePages() {\n    // sortedPages [[page1 card fronts], [page2 card backs],...]\n    // one array per page\n    sortCardsIntoPageArrays()\n    \n    return sortedPages.map((cardPair) => {\n       \n      return (\n        <div key={uuidv4()} className={styles.preview}>\n          {/* page 1 with card fronts */}\n          <div className={styles.pageInnerContainerFront} key={uuidv4()}>\n            {cardPair.map(cardSide => <CardSide id={uuidv4()} cardSide={cardSide} isFront={true} withBorder={withBorder} />)}\n          </div>\n\n          {/* page 2 with card backs */}\n          <div className={styles.pageInnerContainerBack} key={ uuidv4()}>\n            {cardPair.map(cardSide => <CardSide id={uuidv4()} cardSide={cardSide} isFront={false} withBorder={withBorder} />)}\n          </div>\n        </div>\n      )\n    })\n  }\n  \n  return (\n    <div className={styles.previewLayout} ref={printRef}>\n      <header>\n        <AiFillCloseCircle className={styles.modalCloseBtn} onClick={() => togglePreview()} />\n        <h1>Preview</h1>\n        <p>Scroll to see next pages</p>\n      </header>\n      <div className={styles.previewBody}>\n        <div className={styles.pageContainer}>\n          {generatePages()}\n        </div>\n\n          <span className={styles.checkboxFormGroup}>\n            <input type=\"checkbox\" name=\"showBorder\" onChange={handleChange} />\n            <FormLabel inputID=\"front\">Show Border</FormLabel>\n          </span>\n\n        <ReactToPrint\n          trigger={() => <Button type=\"button\">Print</Button>}\n          content={() => printRef.current}\n          documentTitle=\"Flash Cards\"\n          pageStyle=\"margin: 1.2cm 1cm\"\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default Preview;","import { FormEvent, useState } from \"react\"\nimport FormGroup from \"components/forms/FormGroup/FormGroup\"\nimport FormLabel from \"components/forms/FormLabel/FormLabel\"\nimport FormInput from \"components/forms/FormInput/FormInput\"\nimport SubmitButton from \"components/forms/SubmitButton/SubmitButton\"\nimport {ICard} from \"../../../types/\"\nimport styles from \"../_styles/CardBuilder.module.scss\"\n\ninterface PropTypes {\n  cardToEdit: ICard\n  updateCardStack: (card: ICard, isOpen: boolean) => void \n}\n\nconst EditModal = ({cardToEdit, updateCardStack}: PropTypes) => {\n  const [editValues, setEditValues] = useState({\n    id: cardToEdit.id,\n    front: cardToEdit.front,\n    back: cardToEdit.back\n  })\n\n  function updateInputValue(property: string, value: string) {\n    setEditValues({\n      ...editValues,\n      [property]: value\n    })\n  }\n\n  function handleSubmit(e: FormEvent) {\n    e.preventDefault()\n\n    const card = editValues\n    updateCardStack(card, true)\n\n    setEditValues({\n      id: \"\",\n      front: \"\",\n      back: \"\"\n    })\n  }\n\n  return (\n  <form onSubmit={handleSubmit} className={styles.editModal}>\n    <FormGroup>\n      <FormLabel inputID=\"front\">Front</FormLabel>\n      <FormInput\n        type=\"text\"\n        name=\"front\"\n        id=\"front\"\n        value={editValues.front}\n        required={false}\n        onChange={updateInputValue}\n      />\n    </FormGroup>\n\n     <FormGroup>\n      <FormLabel inputID=\"back\">Back</FormLabel>\n      <FormInput\n        type=\"text\"\n        name=\"back\"\n        id=\"back\"\n        value={editValues.back}\n        required={false}\n        onChange={updateInputValue}\n      />\n    </FormGroup>\n\n    <SubmitButton>Save</SubmitButton>\n  </form>\n  )\n}\n\nexport default EditModal","import { useState, useEffect } from \"react\";\nimport {Link} from \"react-router-dom\";\nimport { ICard } from \"types\"\nimport BuilderForm from \"../BuilderForm/BuilderForm\"\nimport CardList from \"../CardList/CardList\";\nimport {IoIosArrowBack} from \"react-icons/io\"\nimport styles from \"../_styles/CardBuilder.module.scss\";\nimport Preview from \"../Preview/Preview\";\nimport Button from \"components/Button/Button\";\nimport EditModal from \"../EditModal/EditModal\";\n\nconst BuilderPage = () => {\n  const [cardStack, setCardStack] = useState<ICard[]>(() => {\n    const stored = localStorage.getItem(\"cards\");\n    if (stored !== null) {\n      const initialState = JSON.parse(stored);\n      return initialState || []\n    } else {\n      return []\n    }\n  })\n  const [showPreview, setShowPreview] = useState(false)\n  const [showEdit, setShowEdit] = useState(false)\n  const [cardToEdit, setCardToEdit] = useState({\n    id: \"\",\n    front: \"\",\n    back: \"\"\n  })\n\n  useEffect(() => {\n    const stored = localStorage.getItem(\"cards\")\n    if (stored !== null) {\n      const cards = JSON.parse(stored)\n      setCardStack(cards)\n    } \n  }, [showPreview, showEdit])\n\n  async function addCardToStack(card: any) {\n    if (cardStack.length === 0) {\n      setCardStack([card])\n    }\n\n    const updatedStack = [...cardStack, card]\n    localStorage.setItem(\"cards\", JSON.stringify(updatedStack))\n    setCardStack(updatedStack)\n  }\n\n  function deleteCard(id: string) {\n    const filteredStack = cardStack.filter(c => c.id !== id)\n    localStorage.setItem(\"cards\", JSON.stringify(filteredStack))\n    setCardStack([...filteredStack])\n  }\n\n  function populateEditModal(id: string, isOpen: boolean) {\n    toggleEdit(isOpen)\n\n    const tempCardStack = cardStack\n    const index = tempCardStack.findIndex(c => c.id === id)\n    setCardToEdit(tempCardStack[index])\n  }\n\n   function toggleEdit(isOpen: boolean) {\n    if (isOpen) {\n      setShowEdit(false)\n    } else {\n      setShowEdit(true)\n    }\n   }\n  \n  function updateCardStack(card: ICard, isOpen: boolean) {\n    toggleEdit(isOpen)\n\n   \n    const tempCardStack = cardStack\n    const index = tempCardStack.findIndex(c => c.id === card.id)\n    tempCardStack[index] = card\n    setCardStack(tempCardStack)\n\n    localStorage.setItem(\"cards\", JSON.stringify(tempCardStack))\n\n    setCardToEdit({\n      id: \"\",\n      front: \"\",\n      back: \"\"\n    })\n  }\n\n  function togglePreview() {\n    setShowPreview(!showPreview)\n  }\n\n  return (\n    <div className={styles.cardBuilder}>\n\n      <header>\n        <Link to=\"/\" className={styles.backLink}><IoIosArrowBack /> Back Home</Link>\n        <h1>Card Builder</h1>\n      </header>\n      \n      <main>\n      \n        <BuilderForm addCardToStack={(card: ICard) => addCardToStack(card)} />\n        <span className={styles.previewBtn}><Button type=\"button\" onClick={() => togglePreview()}>Preview and Print</Button></span>\n        {cardStack.length > 0 ? <CardList cardStack={cardStack} deleteCard={deleteCard} populateEditModal={populateEditModal} /> : null}\n    \n       {\n      showPreview ? (\n        <div className={styles.modal}>\n          <div className={styles.previewContainer}>\n            <Preview cardStack={cardStack} togglePreview={togglePreview} />\n          </div>\n        </div>\n      ) : \"\"\n        }\n        \n        {\n          showEdit ? <EditModal cardToEdit={cardToEdit} updateCardStack={updateCardStack} /> : null\n        }\n     </main>\n    </div>\n  )\n}\n\nexport default BuilderPage;","import styles from \"./LinkButton.module.scss\"\n\ninterface LinkButtonTypes {\n  children: string\n  href: string\n  type: \"primary\" | \"secondary\"\n}\n\nconst LinkButton = ({ children, href, type }: LinkButtonTypes) => {\n  return <a href={href} className={`${styles.linkBtn} ${styles[type]}`}>{children}</a>\n}\n\nexport default LinkButton","import Button from \"components/Button/Button\";\nimport LinkButton from \"components/LinkButton/LinkButton\";\nimport styles from \"../LandingPage.module.scss\";\n\nconst Hero = () => {\n  return (\n    <header className={styles.hero}>\n      <h1>flashy</h1>\n      <p className={styles.subheading}>Create flash cards - lightning fast</p>\n      <div className={styles.btnContainer}>\n        <LinkButton href=\"/build\" type=\"primary\">Try it out!</LinkButton>\n        <LinkButton href=\"#about\" type=\"secondary\">Find out more</LinkButton>\n      </div>\n    </header>\n  )\n}\n\nexport default Hero;","import styles from \"../LandingPage.module.scss\";\n\nconst About = () => {\n  return (\n    <section id=\"about\" className={styles.about}>\n      <header>\n        <h2>About <em>flashy</em></h2>\n      </header>\n\n        <p>Ever needed some flash cards? Ever tried to do that stuff in an everyday text processor? It can get annoying quite fast, especially with all those formatting issues. And don't get me started on layouts.\n        <br />\n        <br />\n        With <em>flashy</em> you can easily create flash cards in... well in a flash! No more hassle.\n        <br />\n        Simply build your flash cards with our easy to navigate user interface. Flashy will then handle all the layout for printing itself.\n        <br />\n        <br />\n        Enjoy!\n      </p>\n    </section>\n  )\n}\n\nexport default About;","import { ChangeEvent } from \"react\"\nimport styles from \"../Form.module.scss\"\n\ninterface FormTextAreaTypes {\n  name: string\n  id: string\n  value: string\n  required: boolean\n  onChange: (property: string, value: string) => void\n}\n\nconst FormTextArea = ({ name, id, value, required = false, onChange }: FormTextAreaTypes) => {\n\n  function handleChange(e: ChangeEvent<HTMLTextAreaElement> ) {\n    onChange(e.target.name, e.target.value)\n  }\n\n  if (required) {\n    return <textarea className={styles.formTextArea} name={name} id={id} value={value} required onChange={e => handleChange(e)} rows={5}></textarea>\n  } else {\n    return <textarea className={styles.formTextArea} name={name} id={id} value={value} onChange={e => handleChange(e)} rows={5}></textarea>\n  }\n}\n\nexport default FormTextArea","import FormGroup from \"components/forms/FormGroup/FormGroup\";\nimport FormLabel from \"components/forms/FormLabel/FormLabel\";\nimport FormInput from \"components/forms/FormInput/FormInput\";\nimport FormTextArea from \"components/forms/FormTextArea/FormTextArea\";\nimport SubmitButton from \"components/forms/SubmitButton/SubmitButton\";\nimport { FormEvent, useState } from \"react\";\nimport styles from \"../../../../components/forms/Form.module.scss\";\n\ninterface Message {\n  name: string,\n  email: string,\n  message: string\n}\n\nconst ContactForm = () => {\n  const [messageDetails, setMessageDetails] = useState<Message>({\n    name: \"\",\n    email: \"\",\n    message: \"\",\n  })\n\n  function updateInputValue(property: string, value: string) {\n    setMessageDetails({\n      ...messageDetails,\n      [property]: value\n    })\n  }\n\n  function handleSubmit(e: FormEvent) {\n    e.preventDefault()\n    setMessageDetails({\n      name: \"\",\n      email: \"\",\n      message: \"\"\n    })\n  }\n\n  return (\n    <form className={styles.formContainer} onSubmit={handleSubmit}>\n      <FormGroup>\n        <FormLabel inputID=\"name\">Name</FormLabel>\n        <FormInput\n          type=\"text\"\n          name=\"name\"\n          id=\"name\"\n          value={messageDetails.name}\n          required={true}\n          onChange={updateInputValue}\n        />\n      </FormGroup>\n\n      <FormGroup>\n        <FormLabel inputID=\"email\">Email</FormLabel>\n        <FormInput\n          type=\"email\"\n          name=\"email\"\n          id=\"email\"\n          value={messageDetails.email}\n          required={true}\n          onChange={updateInputValue}\n        />\n      </FormGroup>\n\n      <FormGroup>\n        <FormLabel inputID=\"message\">Message</FormLabel>\n        <FormTextArea\n          name=\"message\"\n          id=\"message\"\n          value={messageDetails.message}\n          required={true}\n          onChange={updateInputValue} />\n      </FormGroup>\n\n      <SubmitButton>Send</SubmitButton>\n    </form>\n  )\n}\n\nexport default ContactForm;","import ContactForm from \"./ContactForm/ContactForm\";\nimport styles from \"../LandingPage.module.scss\";\n\nconst Contact = () => {\n  return (\n    <section className={styles.contact}>\n      <header>\n        <h2>Contact</h2>\n      </header>\n        <div className={styles.formContainer}>\n          <ContactForm />\n        </div>\n    </section>\n  )\n}\n\nexport default Contact;","import Hero from \"../Hero/Hero\";\nimport About from \"../About/About\";\nimport Contact from \"../Contact/Contact\";\n\nimport styles from \"../LandingPage.module.scss\"\n\nconst HomePage = () => {\n  return (\n    <div className={styles.layout}>\n      <Hero />\n      <About />\n      <Contact />\n    </div>\n  )\n}\n\nexport default HomePage;","import { Link } from \"react-router-dom\";\n\nconst PageNotFound = () => {\n  return (\n    <main>\n      <h1>404 - Page Not Found</h1>\n      <Link to=\"/\">Back Home</Link>\n    </main>\n  )\n}\n\nexport default PageNotFound;","import { Switch, Route, BrowserRouter } from \"react-router-dom\";\nimport BuilderPage from \"../views/Builder/BuilderPage/BuilderPage\";\nimport HomePage from \"../views/Home/HomePage/HomePage\";\nimport PageNotFound from \"../views/PageNotFound/PageNotFound\";\n\nconst Router = () => {\n  return (\n    <BrowserRouter>\n\n      <Switch>\n\n        {/* Homepage */}\n        <Route exact path=\"/\">\n          <HomePage />\n        </Route>\n\n        {/* Card Builder */}\n        <Route exact path=\"/build\">\n          <BuilderPage />\n        </Route>\n\n        {/* 404 Not Found */}\n        <Route path=\"*\">\n          <PageNotFound />\n        </Route>\n\n      </Switch>\n\n    </BrowserRouter>\n  )\n}\n\nexport default Router","import Router from \"./router\";\n\nfunction App() {\n  return (\n    <Router />\n  )\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"previewLayout\":\"Preview_previewLayout__1gWJa\",\"modalCloseBtn\":\"Preview_modalCloseBtn__3MqEL\",\"checkboxFormGroup\":\"Preview_checkboxFormGroup__3wFyd\",\"pageContainer\":\"Preview_pageContainer__16UJ5\",\"preview\":\"Preview_preview__BWsGK\",\"pageInnerContainerFront\":\"Preview_pageInnerContainerFront__2-VFj\",\"pageInnerContainerBack\":\"Preview_pageInnerContainerBack__2nb8S\",\"card\":\"Preview_card__kkkor\",\"withBorder\":\"Preview_withBorder__2bkjZ\",\"cardBody\":\"Preview_cardBody__TcLJ3\",\"cardFooter\":\"Preview_cardFooter__1KTl1\",\"previewBody\":\"Preview_previewBody__1VJa-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formGroup\":\"Form_formGroup__1ZK03\",\"formLabel\":\"Form_formLabel__3fysd\",\"formInput\":\"Form_formInput__38YrW\",\"formTextArea\":\"Form_formTextArea__1b__p\",\"submitButton\":\"Form_submitButton__1P8b9\"};"],"sourceRoot":""}